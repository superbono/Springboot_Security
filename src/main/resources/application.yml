
spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/security?serverTimezone=Asia/Seoul
    username: test
    password: test1234

  jpa:
    hibernate:
      ddl-auto: create
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true

  security:
    oauth2:
      client:
        registration:
          google: # /oauth2/authorization/google 이 주소를 동작하게 한다.
            client-id: 241061198668-suaqq4greeq43j7isj50nv9u4t6tv6vj.apps.googleusercontent.com
            client-secret: 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
            scope:
              - email
              - profile
          facebook: # /oauth2/authorization/facebook 이 주소를 동작하게 한다.
            client-id: 1264135037330739
            client-secret: 0bf29960fc4ce1c981fdd9905557cf5f
            scope:
              - email
              - public_profile
              -
          # 네이버는 기본적으로 Provider를 제공하지 않기 떄문에 실행시 오류가 발생한다.
          # 오류 -> Provider ID must be specified for client registration 'naver'. 로 출력된다.
              # /oauth2/authorization/naver 이 주소를 동작하게 한다.
          naver:
            client-id: bj8NTMQF65PtvhVJW2pg
            client-secret: 1NSt6eFf2p
            scope:
              - name
              - email
              - profile_image
            client-name: Naver # 클라이언트 네임은 구글 페이스북도 대문자로 시작하더라.
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver

          kakao:
            client-id: 4a77a24130b857c5678575043d82c4f1
            client-secret: wiiSlxjUU3niQroQXvqofVz6Chd3cWB4
            scope:
              - account_email
              - profile_nickname
            client-name: Kakao # 클라이언트 네임은 구글 페이스북도 대문자로 시작하더라.
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response # 회원정보를 json의 response 키값으로 리턴해줌.

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: response # 회원정보를 json의 response 키값으로 리턴해줌.

  mvc:
    view:
      prefix: /templates/
      suffix: .mustache

server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true